{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","Header","branding","href","About","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8dc8736.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            }\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload,\n                    ...state.contacts]\n            }\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(\n                    contact => contact.id === action.payload.id\n                    ? (contact = action.payload)\n                    : contact)\n            }\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    async componentDidMount(){\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n            \n        this.setState({contacts: res.data})\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {Consumer} from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n    state = {\n        showContactInfo : false\n    }\n\n    onDeleteClick = async (id, dispatch) => {\n        try{\n          await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n          dispatch({type: 'DELETE_CONTACT', payload: id});\n        } catch(e){\n          dispatch({type: 'DELETE_CONTACT', payload: id});\n        }\n        \n      }\n\n\n  render() {\n      const { id,name,email,phone } = this.props.contact\n      const { showContactInfo } = this.state\n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n                return(\n                    <div className=\"card card-body mb-3\">\n                        <h4>{name} <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\n                            <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\n                            <Link to={`contact/edit/${id}`}>\n                                <i className=\"fas fa-pencil-alt\" style={{\n                                cursor: 'pointer',\n                                float: 'right',\n                                color: 'black',\n                                marginRight: '1rem'\n                                }}></i>\n                            </Link>\n                        </h4>\n                        {showContactInfo ? (<ul className=\"list-group\">\n                            <li className=\"list-group-item\">Email: {email}</li>\n                            <li className=\"list-group-item\">Phone: {phone}</li>\n                        </ul>) : null}\n                        \n                    </div>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n}\n\n\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context'\n\n\nclass Contacts extends Component {\n  render() {\n    return (\n        <Consumer>\n            {value => {\n                const { contacts } = value;\n                return(\n                    <React.Fragment>\n                        <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact </span>List</h1>\n                        {contacts.map(contact => \n                            <Contact key={contact.id} contact={contact}/>\n                        )}\n                    </React.Fragment>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\n\nexport default Contacts;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input \n        type={type}\n        name={name}\n        className={classnames('form-control form-control-ls', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context.js';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check For errors\n    if(name === '') {\n      this.setState({errors: { name: 'Name is required' }});\n      return;\n    }\n\n    if(email === '') {\n      this.setState({errors: { email: 'Email is required' }});\n      return;\n    }\n\n    if(phone === '') {\n      this.setState({errors: { phone: 'Phone is required' }});\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n    dispatch({type: 'ADD_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    this.props.history.push('/');\n\n  }\n\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n  render() {\n    const { name,email,phone,errors } = this.state\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup \n                    name=\"name\"\n                    label=\"Name\"\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup \n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={email}\n                    placeholder=\"Enter Email...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup \n                    name=\"phone\"\n                    label=\"Phone\"\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\" value=\"Add Contact\"\n                  className=\"btn btn-block btn-light\"/>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context.js';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const {id} = this.props.match.params\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n    const contact = res.data\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    })\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check For errors\n    if(name === '') {\n      this.setState({errors: { name: 'Name is required' }});\n      return;\n    }\n\n    if(email === '') {\n      this.setState({errors: { email: 'Email is required' }});\n      return;\n    }\n\n    if(phone === '') {\n      this.setState({errors: { phone: 'Phone is required' }});\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const {id} = this.props.match.params;\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data})\n\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    this.props.history.push('/');\n\n  }\n\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n  render() {\n    const { name,email,phone,errors } = this.state\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup \n                    name=\"name\"\n                    label=\"Name\"\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup \n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={email}\n                    placeholder=\"Enter Email...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup \n                    name=\"phone\"\n                    label=\"Phone\"\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\" value=\"Update Contact\"\n                  className=\"btn btn-block btn-light\"/>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;","import React, { Component } from 'react'\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data => this.setState({\n        title: data.title,\n        body: data.body\n      }))\n  }\n\n  // componentWillMount() {\n  //   console.log('componentWillMount...')\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('ComponentDidUpdate...')\n  // }\n\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate')\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillRecieveProps...')\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return null;\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState){\n  //   console.log('getSnapshotBeforeUpdate...')\n  // }\n\n  render() {\n    const { title, body } = this.state\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n\n\nexport default Test;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Header = (props) => {\n    const {branding} = props\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-3 py-0\">\n        <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">\n                {branding}\n            </a>\n            <div>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\">\n                            <i className=\"fas fa-home\"></i> Home\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/contact/add\" className=\"nav-link\">\n                            <i className=\"fas fa-plus\"></i> Add\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/about\" className=\"nav-link\">\n                            <i className=\"fas fa-question\"></i> About\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n\n  )\n}\n\nHeader.defaultProps = {\n    branding: \"My App\"\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n    \n\nexport default Header;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacs</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 </span>Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts.js'\nimport AddContact from './components/contacts/AddContact.js'\nimport EditContact from './components/contacts/EditContact.js'\nimport Test from './components/test/Test';\n\nimport Header from './components/layout/Header.js'\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from './context'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}